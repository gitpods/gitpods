syntax = "proto3";

package storage;

import "google/protobuf/empty.proto";

service Repository {
    rpc Create (CreateRequest) returns (google.protobuf.Empty);
    rpc SetDescriptions (SetDescriptionRequest) returns (google.protobuf.Empty);
    rpc Tree (TreeRequest) returns (TreeResponse);
}

service Branch {
    rpc List(BranchesRequest) returns (BranchesResponse);
}

service Commit {
    rpc Count(CommitCountRequest) returns (CommitCountResponse);
    rpc List(CommitListRequest) returns (stream CommitListResponse);
    rpc Get(CommitRequest) returns (CommitResponse);
}

service SSH {
    rpc UploadPack(stream GRERequest) returns (stream GREResponse);
    rpc ReceivePack(stream GRERequest) returns (stream GREResponse);
}

message CommitCountRequest {
    // Respository ID
    string id = 1;
    string ref = 2;
}

message CommitListRequest {
    // Respository ID
    string id = 1;
    string ref = 2;
    // limit amount of commits returned
    int64 limit = 3;
    // skip N*limit commits
    int64 skip = 4;
}

message CommitListResponse {
    repeated CommitResponse commits = 1;
}

message CommitCountResponse {
    int64 count = 1;
}

// GRE == gRPC Remote Execution
message GRERequest {
    // Repository ID, must be present in the first message.
    string id = 1;
    bytes stdin = 2;
}

message GREResponse {
    bytes stdout = 1;
    bytes stderr = 2;
    // ONLY sent in the last message.
    GREExitCode exit_code = 3;
}

message GREExitCode {
    int32 exit_code = 1;
}

message CreateRequest {
    string id = 1;
}

message SetDescriptionRequest {
    string id = 1;
    string description = 2;
}

message BranchesRequest {
    string id = 1;
}

message BranchResponse {
    string name = 1;
    string sha1 = 2;
    string type = 3;
}

message BranchesResponse {
    repeated BranchResponse branch = 1;
}

message CommitRequest {
    string id = 1;
    string ref = 2;
}

message CommitResponse {
    string Hash = 1;
    string Tree = 2;
    string Parent = 3;
    string Message = 4;
    string Author = 5;
    string AuthorEmail = 6;
    int64 AuthorDate = 7;
    string Committer = 8;
    string CommitterEmail = 9;
    int64 CommitterDate = 10;
}

message TreeRequest {
    string id = 1;
    string ref = 2;
    string path = 3;
}

message TreeEntryResponse {
    string mode = 1;
    string type = 2;
    string object = 3;
    string path = 4;
}

message TreeResponse {
    repeated TreeEntryResponse treeEntries = 1;
}
